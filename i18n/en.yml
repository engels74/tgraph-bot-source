# Graph titles
daily_play_count_title: "Daily Play Count by Media Type (Last {days} days)"
play_count_by_dayofweek_title: "Play Count by Day of Week (Last {days} days)"
play_count_by_hourofday_title: "Play Count by Hour of Day (Last {days} days)"
top_10_platforms_title: "Play Count by Top 10 Platforms (Last {days} days)"
top_10_users_title: "Play Count by Top 10 Users (Last {days} days)"
play_count_by_month_title: "Total Play Count by Month (Last 12 months)"

# Graph descriptions
daily_play_count_description: "Displays the daily play count for different media types over the last {days} days."
play_count_by_dayofweek_description: "Shows the play count distribution by day of the week for the last {days} days."
play_count_by_hourofday_description: "Illustrates the play count distribution by hour of the day over the last {days} days."
top_10_platforms_description: "Highlights the play count for the top 10 platforms over the last {days} days."
top_10_users_description: "Displays the play count for the top 10 users over the last {days} days."
play_count_by_month_description: "Shows the total play count by month for the last 12 months, excluding months with zero plays."

# Graph labels
daily_play_count_xlabel: "Date"
daily_play_count_ylabel: "Plays"
play_count_by_dayofweek_xlabel: "Day of Week"
play_count_by_dayofweek_ylabel: "Plays"
play_count_by_hourofday_xlabel: "Hour of Day"
play_count_by_hourofday_ylabel: "Plays"
top_10_platforms_xlabel: "Platform"
top_10_platforms_ylabel: "Plays"
top_10_users_xlabel: "User"
top_10_users_ylabel: "Plays"
play_count_by_month_xlabel: "Month"
play_count_by_month_ylabel: "Total Plays"

# Day labels
day_0: "Monday"
day_1: "Tuesday"
day_2: "Wednesday" 
day_3: "Thursday"
day_4: "Friday"
day_5: "Saturday"
day_6: "Sunday"

# Embed footer and next update
embed_footer: "Posted on {now}"
next_update: "Next update: {next_update}"

# Graph generation messages
graphs_no_data_available: "No data available for play_count_by_month"
graphs_no_monthly_data: "No data available for play count by month"

# Logging messages
log_posted_message: "Posted {filename} to Discord"
log_detecting_old_messages: "Detecting old messages"
log_deleted_message: "Deleted a message"
log_ensured_folder_exists: "Ensured image folder exists"
log_ensured_folders_exist: "Ensured all required folders exist"
log_created_dated_folder: "Created dated folder: {folder}"
log_generated_graphs: "Generated graphs"
log_cleaned_up_old_folders: "Cleaned up old folders"
log_bot_logged_in: "Logged in as {name}"
log_loading_bot_commands: "Loading bot commands..."
log_bot_commands_loaded: "Bot commands loaded successfully."
log_syncing_application_commands: "Syncing application commands..."
log_application_commands_synced: "Application commands synced successfully."
log_updating_posting_graphs_startup: "Updating and posting graphs on bot startup..."
log_graphs_updated_posted_startup: "Graphs updated and posted on bot startup."
log_error_during_startup: "Error during startup: {error}"
log_error_starting_bot: "Error starting the bot: {error}"
log_commands_cog_setup: "Commands cog has been set up."
log_command_executed: "Command /{command} executed by {user}"
log_command_error: "Error in /{command} command: {error}"
log_generating_user_graphs: "Generating user graphs for user ID: {user_id}"
log_generated_graph_files: "Generated {count} graph files"
log_sending_graphs_pm: "Sending graphs via PM"
log_sending_graph_file: "Sending graph file: {file}"
log_updating_cooldowns: "Updating cooldowns"
log_graphs_updated_posted: "Graphs updated and posted. Next update: {next_update}"
log_commands_cog_loading: "Commands cog is being loaded..."
log_registering_command: "Registering command: {command_name}"
log_commands_cog_loaded: "Commands cog loaded successfully."
log_manual_update_started: "Manual graph update started."
log_manual_update_completed: "Manual graph update completed."
log_auto_update_started: "Automatic graph update started."
log_auto_update_completed: "Automatic graph update completed. Next update: {next_update}"

# Error messages
error_fetching_data: "Error fetching data from Tautulli API"
error_generating_graph: "Error generating graph: {graph_type}"
error_processing_command: "An error occurred while processing the command."
error_starting_bot: "Error starting the bot: {error}"
error_update_post_graphs: "Error in update_and_post_graphs: {error}"
error_fetch_daily_play_count: "Failed to fetch daily play count data for user {user_id}"
error_fetch_play_count_dayofweek: "Failed to fetch play count by day of week data for user {user_id}"
error_fetch_play_count_hourofday: "Failed to fetch play count by hour of day data for user {user_id}"
error_fetch_top_10_platforms: "Failed to fetch top 10 platforms data for user {user_id}"
error_fetch_play_count_month: "Failed to fetch play count by month data for user {user_id}"
error_fetching_user_id: "Error fetching user ID from email: {error}"

# Command descriptions
my_stats_command_description: "Get your personal Plex statistics"
about_command_description: "Information about the bot"
config_command_description: "View or edit bot configuration"
update_graphs_command_description: "Update and post the graphs"
uptime_command_description: "Show the bot's uptime"

# Command responses
my_stats_email_prompt: "Enter your Plex email address"
my_stats_success: "Your personal statistics have been sent via private message."
my_stats_no_user_found: "No user found with that email address."
my_stats_generate_failed: "Failed to generate graphs. Please try again later."
my_stats_error: "An error occurred while generating your statistics. Please try again later or contact the administrator if the problem persists."
about_description: "TGraph Bot is a Discord bot that generates and posts graphs based on Tautulli data. It provides insights into your media server usage, including daily play counts, play counts by day of the week, play counts by hour of the day, top 10 platforms, top 10 users, and play counts by month."
about_github: "GitHub"
about_license: "License"
config_view_invalid_key: "Invalid or non-configurable key: {key}"
config_edit_specify_key: "Please specify a key to edit."
config_edit_specify_value: "Please specify a value to set."
config_updated_restart: "Configuration updated. Note: Changes to {key} require a bot restart to take effect."
config_updated: "Configuration updated. {key} changed from {old_value} to {new_value}"
update_graphs_success: "Graphs updated and posted. Next update: {next_update}"
update_graphs_error: "An error occurred while processing the command."
uptime_response: "Bot has been running for {uptime}"

# Rate limiting messages
rate_limit_global: "This command is on global cooldown. Please try again {time}."
rate_limit_user: "You can use this command again {time}."

# UpdateTracker messages
update_tracker_initialized: "UpdateTracker initialized with UPDATE_DAYS: {update_days}"
tracker_file_loaded: "Loaded tracker file. Last update: {last_update}, Next update: {next_update}"
no_tracker_file_found: "No tracker file found. Reset to current time."
tracker_reset: "Reset tracker. Last update: {last_update}, Next update: {next_update}"
update_due_check: "Checking if update is due. Now: {now}, Next update: {next_update}, Is due: {is_due}"
tracker_file_saved: "Saved tracker file. Last update: {last_update}, Next update: {next_update}"
